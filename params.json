{
  "name": "SharpConfig",
  "tagline": "An easy-to-use CFG/INI configuration library for .NET.",
  "body": "![sharpconfig_logo.png](sharpconfig_logo.png)\r\n\r\nSharpConfig is an easy-to-use CFG/INI configuration library for .NET.\r\n\r\nYou can use SharpConfig to read, modify and save configuration files and streams, in either text or binary format.\r\n\r\nThe library is fully compatible with .NET 2.0 and higher, and the Mono Framework.\r\n\r\nInstalling via NuGet\r\n---\r\nYou can install SharpConfig via the following NuGet command:\r\n> Install-Package sharpconfig\r\n\r\n[NuGet Page](https://www.nuget.org/packages/sharpconfig/)\r\n\r\n\r\n\r\nAn example Configuration\r\n---\r\n\r\n```cfg\r\n[General]\r\n# a comment\r\nSomeString = Hello World!\r\nSomeInteger = 10 # an inline comment\r\nSomeFloat = 20.05\r\nSomeBoolean = true\r\n```\r\n\r\nTo read these values, your C# code would look like:\r\n```csharp\r\nConfiguration config = Configuration.LoadFromFile(\"sample.cfg\");\r\nSection section = config[\"General\"];\r\n\r\nstring someString = section[\"SomeString\"].StringValue;\r\nint someInteger = section[\"SomeInteger\"].IntValue;\r\nfloat someFloat = section[\"SomeFloat\"].FloatValue;\r\nbool someBool = section[\"SomeBoolean\"].BoolValue;\r\n```\r\n\r\nIterating through a Configuration\r\n---\r\n\r\n```csharp\r\nforeach (var section in myConfig)\r\n{\r\n    foreach (var setting in section)\r\n    {\r\n        // ...\r\n    }\r\n}\r\n```\r\n\r\nCreating a Configuration in-memory\r\n---\r\n\r\n```csharp\r\n// Create the configuration.\r\nvar myConfig = new Configuration();\r\n\r\n// Set some values.\r\n// This will automatically create the sections and settings.\r\nmyConfig[\"Video\"][\"Width\"].IntValue = 1920;\r\nmyConfig[\"Video\"][\"Height\"].IntValue = 1080;\r\n\r\n// Set an array value.\r\nmyConfig[\"Video\"][\"Formats\"].StringValueArray = new[] { \"RGB32\", \"RGBA32\" };\r\n\r\n// Get the values just to test.\r\nint width = myConfig[\"Video\"][\"Width\"].IntValue;\r\nint height = myConfig[\"Video\"][\"Height\"].IntValue;\r\nstring[] formats = myConfig[\"Video\"][\"Formats\"].StringValueArray;\r\n// ...\r\n```\r\n\r\nSaving a Configuration\r\n---\r\n\r\n```csharp\r\nmyConfig.SaveToFile(\"myConfig.cfg\");        // Save to a text-based file.\r\nmyConfig.SaveToStream(myStream);            // Save to a text-based stream.\r\nmyConfig.SaveToBinaryFile(\"myConfig.cfg\");  // Save to a binary file.\r\nmyConfig.SaveToBinaryStream(myStream);      // Save to a binary stream.\r\n```\r\n\r\nMore!\r\n---\r\nSharpConfig has more features, such as **arrays**, **enums** and **object mapping**.\r\n\r\nFor details and examples, please visit the [Wiki](https://github.com/cemdervis/SharpConfig/wiki).\r\nThere are also use case examples available in the [Example File](https://github.com/cemdervis/SharpConfig/blob/master/Example/Program.cs).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}